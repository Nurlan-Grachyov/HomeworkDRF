services:
  web:
    build: .
    command: >-
      sh -c '
      python manage.py makemigrations &&
      python manage.py migrate' &&
      python manage.py runserver 0.0.0.0:8000 --noreload
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8080:8000"
    depends_on:
      - db
    env_file:
      - ./.env

  celery_worker:
    build: .
    command: bash -c "cd /code && celery -A config worker --loglevel=info"
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    command: bash -c "cd /code && celery -A config beat --loglevel=info"
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env

  redis:
    image: redis:7.0.2-alpine
    container_name: redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  static_volume:
  postgres_data: